name: CI

on:
  push:
    branches: 
      - main
      - release/**
  pull_request:
    branches: 
      - main
      - release/**

jobs:
  cmake_build_android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Run cmake build android
        env:
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          ls $ANDROID_NDK
          bash scripts/build-android.sh

          OUTPUT_ARTIFACTORY_NAME="VideoObserver_Plugin_for_Android"
          OUTPUT_ARTIFACTORY_PATH=output/${OUTPUT_ARTIFACTORY_NAME}

          mkdir -p ${OUTPUT_ARTIFACTORY_PATH}
          cp -RP build/android/ALL_ARCHITECTURE/output/Release/ ${OUTPUT_ARTIFACTORY_PATH}

          


          ZIP_FILE_NAME="${OUTPUT_ARTIFACTORY_NAME}.zip"

          pushd output
            zip -r -y "$ZIP_FILE_NAME" $OUTPUT_ARTIFACTORY_NAME
          popd

      - name: ls
        if: always()
        run: |
          ls third_party/agora/dcg/libs/Agora_Native_SDK_for_Android_FULL/rtc/sdk/high_level_api/include/

      - name: Get current date
        id: date
        run: |
          VERSION=$(bash scripts/grep_version.sh)
          DATE=$(date '+%Y%m%d')
          BUILD_NAME="${VERSION}_${DATE}"
          echo "::set-output name=date::${BUILD_NAME}"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: artifact_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'push' }}
        with:
          tag_name: artifact_${{ steps.date.outputs.date }}
          files: "output/*.zip"

  cmake_build_ios:
    name: Build ios
    runs-on: macos-11
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: Run cmake build ios
        run: |
          bash scripts/build-ios.sh

          OUTPUT_ARTIFACTORY_NAME="VideoObserver_Plugin_for_iOS"
          OUTPUT_ARTIFACTORY_PATH=output/${OUTPUT_ARTIFACTORY_NAME}

          mkdir -p ${OUTPUT_ARTIFACTORY_PATH}
          cp -RP build/ios/ALL_ARCHITECTURE/output/Release/ ${OUTPUT_ARTIFACTORY_PATH}

          ZIP_FILE_NAME="${OUTPUT_ARTIFACTORY_NAME}.zip"

          pushd output
            zip -r -y "$ZIP_FILE_NAME" $OUTPUT_ARTIFACTORY_NAME
          popd

      - name: Get current date
        id: date
        run: |
          VERSION=$(bash ci/grep_version.sh)
          DATE=$(date '+%Y%m%d')
          BUILD_NAME="${VERSION}_${DATE}"
          echo "::set-output name=date::${BUILD_NAME}"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: artifact_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'push' }}
        with:
          tag_name: artifact_${{ steps.date.outputs.date }}
          files: "output/*.zip"

  cmake_build_macos:
    name: Build macos
    runs-on: macos-11
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: Run cmake build macos
        run: |
          bash scripts/build-mac.sh

          OUTPUT_ARTIFACTORY_NAME="VideoObserver_Plugin_for_macOS"
          OUTPUT_ARTIFACTORY_PATH=output/${OUTPUT_ARTIFACTORY_NAME}

          mkdir -p ${OUTPUT_ARTIFACTORY_PATH}
          cp -RP build/mac/MAC/output/Release/ ${OUTPUT_ARTIFACTORY_PATH}

          ZIP_FILE_NAME="${OUTPUT_ARTIFACTORY_NAME}.zip"

          pushd output
            zip -r -y "$ZIP_FILE_NAME" $OUTPUT_ARTIFACTORY_NAME
          popd
      - name: Get current date
        id: date
        run: |
          VERSION=$(bash ci/grep_version.sh)
          DATE=$(date '+%Y%m%d')
          BUILD_NAME="${VERSION}_${DATE}"
          echo "::set-output name=date::${BUILD_NAME}"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: artifact_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'push' }}
        with:
          tag_name: artifact_${{ steps.date.outputs.date }}
          files: "output/*.zip"

  cmake_build_windows:
    name: Build windows
    runs-on: windows-2019
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: Run cmake build windows
        shell: bash
        run: |
          OUTPUT_ARTIFACTORY_NAME="VideoObserver_Plugin_for_Windows"
          OUTPUT_ARTIFACTORY_PATH=output/${OUTPUT_ARTIFACTORY_NAME}

          mkdir -p ${OUTPUT_ARTIFACTORY_PATH}

          bash scripts/build-windows.sh ${OUTPUT_ARTIFACTORY_PATH}

          ZIP_FILE_NAME="${OUTPUT_ARTIFACTORY_NAME}.zip"

          pushd output
            tar.exe -a -c -f  "$ZIP_FILE_NAME" $OUTPUT_ARTIFACTORY_NAME
          popd

      - name: Get current date
        id: date
        shell: bash
        run: |
          VERSION=$(bash ci/grep_version.sh)
          DATE=$(date '+%Y%m%d')
          BUILD_NAME="${VERSION}_${DATE}"
          echo "::set-output name=date::${BUILD_NAME}"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: artifact_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'push' }}
        with:
          tag_name: artifact_${{ steps.date.outputs.date }}
          files: "output/*.zip"
